<test name="Dependents">
  <class name="test.dependent.SampleDependentConfigurationMethods">
    <test-method status="FAIL" signature="createInstance()" name="createInstance" is-config="true" duration-ms="1" started-at="2008-06-11T21:09:53Z" depends-on-methods="test.dependent.SampleDependentConfigurationMethods.firstInvocation" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="verifyDependents()" name="verifyDependents" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="firstInvocation()" name="firstInvocation" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.SampleDependentMethods">
    <test-method status="PASS" signature="thirdA()" name="thirdA" duration-ms="0" started-at="2008-06-11T21:09:53Z" depends-on-methods="test.dependent.SampleDependentMethods.secondA" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="oneA()" name="oneA" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="oneB()" name="oneB" duration-ms="1" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="canBeRunAnytime()" name="canBeRunAnytime" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="secondA()" name="secondA" duration-ms="0" started-at="2008-06-11T21:09:53Z" depends-on-methods="test.dependent.SampleDependentMethods.oneB, test.dependent.SampleDependentMethods.oneA" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.DependentAlwaysRunTest">
    <test-method status="SKIP" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="25" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="26" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="24" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="verifyDependsOnMethodsAlwaysRun()" name="verifyDependsOnMethodsAlwaysRun" duration-ms="5" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="verifyDependsOnGroups1AlwaysRun()" name="verifyDependsOnGroups1AlwaysRun" duration-ms="7" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="verifyDependsOnGroups2AlwaysRun()" name="verifyDependsOnGroups2AlwaysRun" duration-ms="9" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.DependsWithRegexp">
    <test-method status="FAIL" signature="verify()" name="verify" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="stop()" name="stop" duration-ms="1" depends-on-groups="start.*" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="start()" name="start" duration-ms="1" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.TestngTest">
    <test-method status="PASS" signature="test0()" name="test0" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="setUp()" name="setUp" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="test1()" name="test1" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="test2()" name="test2" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.SampleDependentMethods3">
    <test-method status="PASS" signature="one()" name="one" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="secondA()" name="secondA" duration-ms="0" started-at="2008-06-11T21:09:53Z" depends-on-methods="test.dependent.SampleDependentMethods3.one" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="one(java.lang.String)" name="one" duration-ms="1" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
      <params>
        <param index="0">
          <value>
            <![CDATA[Cedric]]>
          </value>
        </param>
      </params>
    </test-method>
    <test-method status="SKIP" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.SampleDependentMethods2">
    <test-method status="SKIP" signature="canBeRunAnytime()" name="canBeRunAnytime" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="tearDown()" name="tearDown" is-config="true" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="SKIP" signature="secondA()" name="secondA" duration-ms="0" depends-on-groups="one" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="oneB()" name="oneB" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="thirdA()" name="thirdA" duration-ms="0" started-at="2008-06-11T21:09:53Z" depends-on-methods="test.dependent.SampleDependentMethods2.secondA" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="FAIL" signature="oneA()" name="oneA" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.DependentTest">
    <test-method status="FAIL" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="22" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="22" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="simpleSkip()" name="simpleSkip" duration-ms="5" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="dependentMethods()" name="dependentMethods" duration-ms="8" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="20" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="dependentMethodsWithSkip()" name="dependentMethodsWithSkip" duration-ms="6" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="19" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="dependentMethodsWithNonExistentMethod()" name="dependentMethodsWithNonExistentMethod" duration-ms="3" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
      <exception class="org.reportyng.TestNGException">
        <message>
          <![CDATA[
test.dependent.SampleDependentMethods5.step2() is depending on nonexistent method blablable]]>
        </message>
        <full-stacktrace><![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDAreportyngCDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATA[<![CDATreportyngDATA[
          <![CDATA[org.testng.TestNGException:
test.dependent.SampleDependentMethods5.step2() is dereportyngortyngn nonexistent method blablable
	at org.testng.inreportyng.MethodHelper.findMethodsNamed(MethodHelper.java:143)
	at org.testng.internal.MethodHelper.topologicalSort(MethodHelper.java:472)
	areportyngtestng.internal.MethodHelper.sortreportyngs(MethodHelper.java:544)
	at org.testng.internreportynghodHelper.internalCollectAndOrderMethods(MethodHelper.java:77)
	at org.testng.intreportyngMethodHelper.collectAndOrderMethods(MethodHelper.java:49)
	at org.testng.TestRunner.initMethods(Tesreportyngr.java:355)
	at org.testng.TestRunner.init(TestRureportyngava:234)
	at org.testng.TestRunner.init(TestRunner.java:196)
	at org.testng.TestRunner.&lt;init&gt;(TestRunner.java:154)
	at test.BaseTest$reportyngalTestRunnerFactory.newTestRunner(BaseTest.java:307)
	at org.testng.SuiteRunner$ProxyTestRunnerFactory.newTestRunner(SuiteRunner.java:527)
	areportyngtestng.SuiteRunner.privateRun(SuiteRunner.java:250)
	at org.testng.SuiteRunner.run(SuiteRunner.java:204)
	at test.BaseTest.run(BaseTest.java:130)
	at test.dependent.DependentTest.dependentMethodsWithNonExistentMethod(DependentTereportynga:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodreportyngorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internreportyngreportyngper.invokeMethod(MethodHelper.java:580)
	at org.testng.internal.Invoker.invokeMreportyngInvoker.java:513)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:658)
	at org.testng.reportyngal.Invoker.invokeTestMethods(Invoker.java:939)
	at org.testng.internal.TestMethodWorreportyngvokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:110)
	at org.testng.TestRunner.runWorkers(Tereportynger.java:719)
	at org.testng.TestRunnereportyngateRun(TestRunner.java:589)
	at org.reportyng.Tereportynger.run(TestRunner.java:484)
	at orgreportyngg.SuiteRunner.runTest(SuiteRunner.java:330)
	at org.testng.reportyngunner.runSequentially(SuiteRunner.java:325)reportyngrg.tereportynguiteRunner.privateRun(SuiteRunnreportynga:298)
	at org.testng.Suitereportyng.run(SuiteRunner.java:204)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:864)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:830)
	at org.testng.TestNG.run(TestNG.java:7reportyngt org.testng.TestNG.privateMain(TestNG.java:901)
	at org.testng.TestNG.main(TestNG.java:874)
]]>
        ]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]>]]></full-stacktrace>
      </exception>
    </test-method>
  </class>
  <class name="test.dependent.OrderMethodTest">
    <test-method status="PASS" signature="z_first0()" name="z_first0" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="z_premiere1()" name="z_premiere1" duration-ms="0" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="third0()" name="third0" duration-ms="0" depends-on-groups="2.*" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="a_second1()" name="a_second1" duration-ms="0" depends-on-groups="1.0, 1.1" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="a_second0()" name="a_second0" duration-ms="0" depends-on-groups="1.0, 1.1" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
  <class name="test.dependent.ClassDependsOnGroups">
    <test-method status="PASS" signature="verifyDependsOnGroups()" name="verifyDependsOnGroups" duration-ms="29" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
    <test-method status="PASS" signature="methodSetUp()" name="methodSetUp" is-config="true" duration-ms="26" started-at="2008-06-11T21:09:53Z" finished-at="2008-06-11T21:09:53Z">
    </test-method>
  </class>
</test>
